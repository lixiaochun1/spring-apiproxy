<?xml version="1.0" encoding="UTF-8"?>
<beans:beans xmlns="http://www.springframework.org/schema/mvc"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:beans="http://www.springframework.org/schema/beans"
	xmlns:context="http://www.springframework.org/schema/context"
	xsi:schemaLocation="http://www.springframework.org/schema/mvc http://www.springframework.org/schema/mvc/spring-mvc-3.0.xsd
		http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-3.0.xsd
		http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context-3.0.xsd">

	<!-- Enables the Spring MVC @Controller programming model -->
	<annotation-driven />

	<!-- Handles HTTP GET requests for /resources/** by efficiently serving 
		up static resources in the ${webappRoot}/resources directory -->
	<resources mapping="/resources/**" location="/resources/" />

	<!-- Resolves views selected for rendering by @Controllers to .jsp resources 
		in the /WEB-INF/views directory -->
	<beans:bean
		class="org.springframework.web.servlet.view.InternalResourceViewResolver">
		<beans:property name="prefix" value="/WEB-INF/views/" />
		<beans:property name="suffix" value=".jsp" />
	</beans:bean>

	<context:component-scan base-package="name.skitazaki.apiproxy" />

	<beans:bean id="serverInfoDao"
		class="name.skitazaki.apiproxy.repository.JdbcServerInfoDao">
		<beans:property name="dataSource" ref="dataSource" />
	</beans:bean>

	<beans:bean id="dataSource"
		class="org.springframework.jdbc.datasource.DriverManagerDataSource">
		<beans:property name="driverClassName" value="${jdbc.driverClassName}" />
		<beans:property name="url" value="${jdbc.url}" />
		<beans:property name="username" value="${jdbc.username}" />
		<beans:property name="password" value="${jdbc.password}" />
	</beans:bean>

	<beans:bean id="configManager"
		class="name.skitazaki.apiproxy.service.SimpleServerInfoManager">
		<beans:property name="configurations">
			<beans:list>
				<beans:ref bean="config1" />
				<beans:ref bean="config2" />
			</beans:list>
		</beans:property>
	</beans:bean>

	<beans:bean id="config1" class="name.skitazaki.apiproxy.model.ServerInfo">
		<beans:property name="name" value="solr" />
		<beans:property name="url" value="http://localhost:8983/solr" />
	</beans:bean>

	<beans:bean id="config2" class="name.skitazaki.apiproxy.model.ServerInfo">
		<beans:property name="name" value="python" />
		<beans:property name="url" value="http://localhost:8000" />
	</beans:bean>

	<beans:bean id="propertyConfigurer"
		class="org.springframework.beans.factory.config.PropertyPlaceholderConfigurer">
		<beans:property name="locations">
			<beans:list>
				<beans:value>classpath:jdbc.properties</beans:value>
			</beans:list>
		</beans:property>
	</beans:bean>

	<beans:bean id="transactionManager"
		class="org.springframework.jdbc.datasource.DataSourceTransactionManager">
		<beans:property name="dataSource" ref="dataSource" />
	</beans:bean>

	<beans:bean id="messageSource"
		class="org.springframework.context.support.ResourceBundleMessageSource">
		<beans:property name="basename" value="messages" />
	</beans:bean>
</beans:beans>
